##############################################################################
# Helpful commands
# To rename a window
# tmux rename-window -t <window> <newname> 
# tmux list-sessions
# tmux rename-session -t 0 MainSession
# printf '\033]2;%s\033\\' 'title goes here'  
# tmux display-message -p '#S' # session name
#  tmux list-panes -s -F '#{window_index} #{pane_index} #{pane_current_path}' Show indexs but not realy a list of panes...
#
# To select text with mouse, press shift !
###################
# CHEAT SHEET
###################
## SESSIONS ##
# C-a d         detach from session
# C-a $         rename the current session
# C-a s         choose a session from a list
## WINDOWS ###
#C-a c          create a new window
#C-a 1 ...      switch to window 1, ..., 9, 0
#C-a 9
#C-a 0
#C-a p          previous window
#C-a n          next window
#C-a l          ‘last’ (previously used) window
#C-a w          choose window from a list
#TMUX COLORS : https://superuser.com/questions/285381/how-does-the-tmux-color-palette-work
#
# sharex windows : http://blog.tekerson.com/2013/05/28/share-tmux-windows-across-sessions/
#
######################################
# https://jamesoff.net/2017/08/26/tmux-configuration.html
# Tmux sessions
#   local : 
#        sudo : for apt and config
#   remote :
#   fullscreen :
#   halfscreen : for yakuake 
#   shared : 
#       htop log
#
# tmux template
#   log : journalctl, tail -f /var/log/??
#   
#
# tmux new-session -s local
# tmux new-session -s fullscreen -t local
# 
# attatch to local session; -d to detach from elsewhere
# tmux attach-session -t local
##############################################################################

# COLORS

color_orange="colour166" # 208, 166
color_purple="colour134" # 135, 134
color_green="colour076" # 070
color_blue="colour39"
color_yellow="colour220"
color_red="colour160"
color_black="colour232"
color_white="white" # 015
# This is a theme CONTRACT, you are required to define variables below
# Change values, but not remove/rename variables itself
color_dark="$color_black"
color_light="$color_white"
color_session_text="$color_blue"
color_status_text="colour245"
color_main="$color_orange"
color_secondary="$color_purple"
color_level_ok="$color_green"
color_level_warn="$color_yellow"
color_level_stress="$color_red"
color_window_off_indicator="colour088"
color_window_off_status_bg="colour238"
color_window_off_status_current_bg="colour254"


set -g default-terminal "screen-256color" # colors!
setw -g xterm-keys on
set -s escape-time 10                     # faster command sequences
set -sg repeat-time 600                   # increase repeat timeout
set -s focus-events on
#set -g set-remain-on-exit  on
set -g remain-on-exit on

set -q -g status-utf8 on                  # expect UTF-8 (tmux < 2.2)
setw -q -g utf8 on

set -g history-limit 10000                 # boost history

# Allow strikethrough text !
set -as terminal-overrides ',xterm*:smxx=\E[9m'

#TO TEST
#set -ga terminal-overrides ',xterm*:smcup@:rmcup@'
#set -ga terminal-override ',rxvt-uni*:XT:Ms=\E]52;%p1%s;%p2%s\007'

#What is this ? https://github.com/tmuxinator/tmuxinator/issues/494
set-option -g update-environment 'DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY DBUS_SESSION_BUS_ADDRESS'

# Use vim keybindings
setw -g mode-keys vi

# Disable bell
set -g bell-action none

# don't rename windows automatically
set-option -g allow-rename off

# Enable names for panes
set -g pane-border-status top
# https://stackoverflow.com/questions/40234553/how-to-rename-a-pane-in-tmux
set -g pane-border-format "#{pane_index} #T - #{pane_current_command}"

# Fix ESC in vim
set -s escape-time 0


# https://unix.stackexchange.com/questions/83404/how-do-i-show-simple-uptime-in-tmuxs-status-bar
set -g status-right '#[fg=red,bg=default]#(uptime -p) #[fg=colour0] '

# set zsh as default shell
#set -g default-command /bin/zsh
#set -g default-shell /bin/zsh

###############################################################################
# Easier commands & less awkward prefix keys
# https://www.hamvocke.com/blog/a-guide-to-customizing-your-tmux-conf/
###############################################################################

# remap prefix from 'C-b' to 'C-a'
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# split panes using | and - 
# Open at current path https://github.com/tmux/tmux/issues/1113
bind | split-window -h 
bind _ split-window -v 
#bind c new-window -c "#{pane_current_path}"
unbind '"'
unbind %

# create session
#bind C-c new-session
# switch between sessions
bind -r ( switch-client -p
bind -r ) switch-client -n

# find session
bind C-f command-prompt -p find-session 'switch-client -t %%'

# Pane movement
bind > swap-pane -D       # swap current pane with the next one
bind < swap-pane -U       # swap current pane with the previous one
# Pane zoomer
#unbind x
#bind x run ". ~/.tmux.zoomer"
# reload config file (change file location to your the tmux.conf you want to use)
bind-key -n C-Space resize-pane -Z \; 

# Highlighting zoomed tmux windows in the status line
# https://sgeb.io/posts/2016/11/til-zoom-tmux-panes/
setw -g window-status-current-format '#{?window_zoomed_flag,#[fg=yellow],}#F#I [#W] '

# Reload source file for tmux
unbind C-r
bind C-r source-file ~/.tmux.conf \; display '~/.tmux.conf sourced'

# switch panes using Alt-arrow without prefix
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# new window and retain cwd
bind -r C new-window -c "#{pane_current_path}"
# New panel in largest pannel #NOT WORKING ??? TO FIX
bind t run "[[ $(($(tmux display -p '8*#{pane_width}-20*#{pane_height}'))) -lt 0 ]] && tmux command-prompt -p \"Open pane large with command:\" \"splitw -v -c '#{pane_current_path}' '%%'\" || tmux command-prompt -p \"Open large pane with command:\" \"splitw -h -c '#{pane_current_path}' '%%'\""

# Rename session and window
bind r command-prompt -I "#{window_name}" "rename-window '%%'"
bind R command-prompt -I "#{session_name}" "rename-session '%%'"

# Select windows
bind -r C-left previous-window
bind -r C-right next-window

# Link window ??
bind L command-prompt -p "Link window from (session:window): " "link-window -s %% -a"

# Swap panes back and forth with 1st pane
# When in main-(horizontal|vertical) layouts, the biggest/widest panel is always @1
bind \ if '[ #{pane_index} -eq 1 ]' \
     'swap-pane -s "!"' \
     'select-pane -t:.1 ; swap-pane -d -t 1 -s "!"'

# Kill pane/window/session shortcuts
bind x kill-pane
bind X kill-window
bind C-x confirm-before -p "kill other windows? (y/n)" "kill-window -a"
bind Q confirm-before -p "kill-session #S? (y/n)" kill-session     

# Hide status bar on demand
bind C-s if -F '#{s/off//:status}' 'set status off' 'set status on'

# Detach from session
bind d detach
bind D if -F '#{session_many_attached}' \
    'confirm-before -p "Detach other clients? (y/n)" "detach -a"' \
    'display "Session has only 1 client attached"'
    
# Renew environment
bind '$' run "~/.tmux/renew_env.sh"
     
###############################################################################
# Display
###############################################################################

set -g base-index 1           # start windows numbering at 1
setw -g pane-base-index 1     # make pane numbering consistent with windows

setw -g automatic-rename off   # rename window to reflect current program
set -g renumber-windows on    # renumber windows when a window is closed

set -g set-titles on          # set terminal title

set -g display-panes-time 800 # slightly longer pane indicators display time
set -g display-time 1300      # slightly longer status messages display time

set -g status-interval 10     # redraw status line every 10 seconds

# clear both screen and history
bind -n C-l send-keys C-l \; run 'sleep 0.1' \; clear-history

# activity
set -g monitor-activity on
set -g visual-activity off

#https://github.com/samoshkin/tmux-config/blob/master/tmux/tmux.conf
# Set parent terminal title to reflect current window in tmux session 
set -g set-titles on
set -g set-titles-string "#I:#W"

# Start index of window/pane with 1, because we're humans, not computers
set -g base-index 1
setw -g pane-base-index 1

# Prompt to rename window right after it's created
set-hook -g after-new-window 'command-prompt -I "#{window_name}" "rename-window '%%'"'



###############################################################################
# Mouse
###############################################################################

# # Allow mouse copy https://unix.stackexchange.com/questions/318281/how-to-copy-and-paste-with-a-mouse-with-tmux

setw -g mouse on

# toggle mouse mode to allow mouse copy/paste
# set mouse on with prefix m
bind m \
    set -g mouse on \;\
    display 'Mouse: ON'
# set mouse off with prefix M
bind M \
    set -g mouse off \;\
    display 'Mouse: OFF'

# Enable fast scrolling with Ctrl
bind-key -T root C-WheelUpPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
   


bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M
bind -n C-WheelUpPane select-pane -t= \; copy-mode -e \; send-keys -M

# Enable mouse copy-mode scrolling http://dotshare.it/dots/1115/
#bind-key -T root WheelUpPane   if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; copy-mode -e; send-keys -M"
#bind-key -T root WheelDownPane if-shell -F -t = "#{alternate_on}" "send-keys -M" "select-pane -t =; send-keys -M"


###################
# Mouse COPY !!
# Note, you must install xclip !
# If you scroll, you can only go one way.
###################


# Sane scrolling
#set -g terminal-overrides 'xterm*:smcup@:rmcup@'

bind -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"

###############################################################################
# Nested sessions
# https://medium.freecodecamp.org/tmux-in-practice-local-and-nested-remote-tmux-sessions-4f7ba5db8795
###############################################################################
bind -T root F12  \
  set prefix None \;\
  set key-table off \;\
  set status-style "fg=$color_status_text,bg=$color_window_off_status_bg" \;\
  set window-status-current-format "#[fg=$color_window_off_status_bg,bg=$color_window_off_status_current_bg]$separator_powerline_right#[default] #I:#W #[fg=$color_window_off_status_current_bg,bg=$color_window_off_status_bg]$separator_powerline_right#[default]" \;\
  set window-status-current-style "fg=$color_dark,bold,bg=$color_window_off_status_current_bg" \;\
  if -F '#{pane_in_mode}' 'send-keys -X cancel' \;\
  refresh-client -S \;\

bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-style \;\
  set -u window-status-current-style \;\
  set -u window-status-current-format \;\
  refresh-client -S
  
wg_is_keys_off="#[fg=$color_light,bg=$color_window_off_indicator]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"

set -g status-right "$wg_is_keys_off #{sysstat_cpu} | #{sysstat_mem} | #{sysstat_loadavg} | $wg_user_host"

# status line of the outer session is positioned at the top, where the inner session has its status line at the bottom
if-shell 'test -n "$SSH_CLIENT"' \
   'source-file ~/.tmux.remote'


###############################################################################
# Theme
###############################################################################

# TODO
# Public IP bottom right
# ping to 1.1.1.1 or 8.8.8.8

# Get tmux window size
# [[ $(($(tput cols) * 8)) -lt $(($(tput lines) * 20)) ]] && echo Rows$(tput cols)-$(tput lines) || echo Cols$(tput cols)-$(tput lines)
# $(tmux display -p '#{pane_width}-#{pane_height}')
# tmux display-message -p '#{pane_height}'


# TODO 
# STATUS BAR FOR TOP IF IN NESTED TMUX
# DETECT NESTED TMUX

# status bar theme

#Status refresh rate
set -g status-interval 5

set -g status-bg 'colour235'
set -g message-command-fg 'colour222'
set -g status-justify 'centre'
set -g status-left-length '100'
set -g status 'on'
set -g message-bg 'colour238'
set -g status-right-length '100'
set -g status-right-attr 'none'
set -g message-fg 'colour222'
set -g message-command-bg 'colour238'
set -g status-attr 'none'
#set -g status-utf8 'on'
#set -g pane-border-fg 'colour238'
# pane divider color; non active pane
set -g pane-border-fg default
set -g pane-border-bg default
# helps when you have more than two panes.
set -g pane-active-border-fg 'colour154'
set -g pane-active-border-bg default
    
set -g status-left-attr 'none'
setw -g window-status-fg 'colour121'
setw -g window-status-attr 'none'
setw -g window-status-activity-bg 'colour235'
setw -g window-status-activity-attr 'none'
setw -g window-status-activity-fg 'colour154'

setw -g window-status-separator '+'
setw -g window-status-bg 'colour235'
set -g status-left '#[fg=colour232,bg=colour154] #S #[fg=colour154,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour222,bg=colour238] #W #[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]#[fg=colour121,bg=colour235]   #(uptime  | cut -d " " -f 1,2,3) #[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]'
set -g status-right '#[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]#[fg=colour121,bg=colour235] %r  %M  %Y #[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]#[fg=colour222,bg=colour238]#(whoami)@#H #[fg=colour154,bg=colour238,nobold,nounderscore,noitalics]'
setw -g window-status-format '#[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]#[default] #I  #W #[fg=colour235,bg=colour235,nobold,nounderscore,noitalics]'
setw -g window-status-current-format '#[fg=colour235,bg=colour238,nobold,nounderscore,noitalics]#[fg=colour222,bg=colour238] #I > [#W]#[fg=colour238,bg=colour235,nobold,nounderscore,noitalics]'





